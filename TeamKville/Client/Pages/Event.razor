@page "/event/{id:int}"
@using TeamKville.Shared;
@inject IToastService ToastService

<div class="container d-flex w-100">
	<div class="container mt-5 border border-2 d-flex justify-content-center w-75">
			
		<img src="@SharedClass.GetImage("event", currentEvent.Name)" style="height: 400px; width: auto; object-fit: contain;" />
	</div>
	<div class="card mt-5 mx-3 w-25 h-75 border border-0 rounded-0" style="background-color:#c2d1d9; ">
			<div class="card-body" style="height: 404px; ">
				<h5 class="text-center">Detaljer</h5>
				<div class="card-text h-50 mt-5">					
					<p class="p-0 m-0"><b>Deltagare:</b> @currentEvent.RegisteredCustomersDtos.Count()</p>
					<p class="p-0 m-0"><b>Datum: </b>@currentEvent.Date.ToShortDateString()</p>
					<p class="p-0 m-0"><b>Tid: </b>@currentEvent.Date.ToShortTimeString()</p>								
				</div>

				@if(currentEvent.Date > DateTime.Now)
				{
					<AuthorizeView>
					<div class="text-center">
					<button class="btn btn-primary" @onclick="RegisterUserToEvent">Registrera</button>
					
						@if(SharedClass.activeUser.IsAdmin)
						{						
							<button class="btn btn-primary mt-2" @onclick="ViewRegisteredUsers">Registerade Användare</button>						
						}
					</div>
					</AuthorizeView>
				}
			
			</div>
	</div>
</div>

<div class="container mt-3 mb-3 p-3">
	<h2>@currentEvent.Name</h2>
	<p>	@currentEvent.Description</p>
	<h3></h3>
</div>
@code {
	[Parameter]
	public int Id { get; set; }

	[CascadingParameter] IModalService Modal { get; set; } = default!;

	EventDto currentEvent = new EventDto();

	protected override async Task OnInitializedAsync()
	{
		var allEvents = await HttpClient.GetFromJsonAsync<IEnumerable<EventDto>>(HttpClient.BaseAddress + "event/all");
		currentEvent = allEvents.Where(e => e.Id == Id).First();
	}

	private async void RegisterUserToEvent()
	{	
		await HttpClient.PatchAsJsonAsync<UserDto>(HttpClient.BaseAddress + "event?eventId=" + currentEvent.Id, SharedClass.activeUser);
		ToastService.ShowSuccess("Registrerad!");
	}

	private async void ViewRegisteredUsers()
	{
		var options = new ModalOptions
			{
				Size = ModalSize.Large,
				AnimationType = ModalAnimationType.FadeInOut,
				HideCloseButton = false,
				DisableBackgroundCancel = true
			};


		var parameters = new ModalParameters().Add(nameof(EventRegisteredUsers.registeredUsers), currentEvent.RegisteredCustomersDtos);
		var modal = Modal.Show<EventRegisteredUsers>("Registerade Användare", parameters, options);
		var result = await modal.Result;
	}
}
