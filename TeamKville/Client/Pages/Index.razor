@page "/"
@using TeamKville.Shared;
@using TeamKville.Shared.Dto;

<div class="container shadow" style="background-color: white;">
	<h3 class="p-3 text-center">Kommande Event</h3>
	<div class="container text-center">
		<div class="card mx-auto d-block w-50 h-50 shadow-sm">
			<!--TBD!! Ändra baserat på hur vi navigerar till event-->
			<img src=@SharedClass.GetImage("event", id) class="card-img-top"style="object-fit: contain;">
			<div class="card-body">
				<div class="cardcard-title">					
						<h4>@name</h4>
						<p>@description</p>
						<h5>Datum: @date</h5>
				</div>
				<a href="/event/@id" class="btn btn-primary">Läs mer</a>
			</div>	
		</div>
	</div>
	
	<h3 class="p-3 text-center">Rekommenderade Produkter</h3>
	<div class="container p-3 text-center control-container shadow" style="max-width: 80vh; height: 50vh; background-color: white; margin: 0 auto;">
		<SfCarousel>
			<ChildContent>
			@foreach (ProductDto product in recommendedProducts)
			{
				<CarouselItem>
					<div class="carousel-caption" style="color: black;">
						<img class="card-img-top pt-2 pb-2" style="height: 250px; object-fit: contain;" src=@SharedClass.GetImage("product", product.Id)/>
						<div class="border-top" style="padding:1rem;">
							<h5>@product.Name</h5>
							<p>@product.Price kr</p>
							<!--TBD!! Ändra baserat på hur vi navigerar till produkter-->
							<a href="/product/@product.Id" class="btn btn-primary">Läs mer</a>
						</div>
					</div>
				</CarouselItem>
			}
			</ChildContent>
		</SfCarousel>
	</div>


	<div class="container text-center p-5">
		<h1>Never quit, always Finish IT!</h1>
	</div>
</div>




@code{

	//Event properties
	int id;
	string description;
	string name;
	DateTime date;

	//Product
	List<ProductDto> allProducts = new List<ProductDto>();
	List<ProductDto> recommendedProducts = new List<ProductDto>();

	//Orderhistory
	string topGenre;

	protected override async Task OnInitializedAsync()
	{
		GetEvent();
		GetRecommendedProducts();
	}

	void GetEvent()
	{
		//Hämta från API/Databas när det är klart

		name = "Nördgibb";
		description = "Wow kolla vilket coolt lan event!";
		date = DateTime.Now;
		id = 2;
	}

	void GetRecommendedProducts()
	{
		//Hämta från API/Databas när det är klart
		var rand = new Random();
		for (int i = 0; i < 25; i++)
		{
			allProducts.Add(new ProductDto { Id = i, Name = "Spel" + i, Category = "game", Genre = "action", Age = 18, Price = 599, Rating = rand.Next(1, 5) });
		}

		//Lägg till funktion som räknar ut toppgenre när API är klart
		topGenre = "action";

		recommendedProducts = allProducts.Where(product => product.Genre == topGenre).OrderBy(x => rand.Next()).Take(5).ToList();

	}

}