@page "/Cart"
@using TeamKville.Shared;
@using Microsoft.AspNetCore.Components.Forms;
@inject NavigationManager NavigationManager

<h3 class="pt-3 text-center">Kundvagn</h3>
 <hr style="width: 75%; margin: 0 auto;"/>

 @if (cartItems == null || cartItems.Count() <= 0)
    {
        <span>You have no items in your cart.</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                
                <div class="container item-container d-flex w-75 align-items-center">
                    <div class="item-image-wrapper"><img src="@SharedClass.GetImage("product",item.ProductName)" class="item-image" /></div>
                    <div class="item-name">
                        <h5><a href="/product/@item.ProductId">@item.ProductName</a></h5>
                        <button class="btn-delete" @onclick="@(() => DeleteItem(item))">Ta bort</button>
                        <div class="container d-flex">
                            <button style="background: none; border: none;" @onclick="(() => {DecreaseQuantity(item); item.Quantity -= 1;})">-</button>
                            <input type="number" id="quantity" @bind="item.Quantity" class="form-control" style="width: 70px" readonly/>
                            <button style="background: none; border: none;" @onclick="(() => {IncreaseQuantity(item); item.Quantity += 1;})">+</button>
                        </div>
                    </div>
                    <div class="item-price align-self-center justify-content-center">@(item.Price * item.Quantity)kr</div>
                </div>
                <hr style="width: 75%; margin: 0 auto;"/>
            }
            <div class="item-price w-75 container align-items-center pt-1">
                Total (@cartItems.Count()): @cartItems.Sum(item => item.Price * item.Quantity)kr
            </div>
            <div class="text-center m-4 p-4">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">Till Betalning</button>
            </div>
        </div>
    }

@code {
    List<CartItemDto> cartItems = new List<CartItemDto>();
    StringContent stringContent = new StringContent("");

    protected override async Task OnInitializedAsync()
    {   
        if (SharedClass.activeUser != null)
        {
            await Task.Delay(1000);
            await RefreshCart();
        }
        else
        {
            
        }
    }

    private async Task RefreshCart()
    {  
        var shoppingCart = await HttpClient.GetFromJsonAsync<ShoppingCartDto>(HttpClient.BaseAddress + "api/user/shoppingcart/" + SharedClass.activeUser.UserId);
        cartItems = shoppingCart.Products.ToList();      
    }

    private async void DeleteItem(CartItemDto item)
    {
        cartItems.Remove(item);

        await HttpClient.PostAsync(HttpClient.BaseAddress + "api/user/shoppingcart/delete-cartitem/" + SharedClass.activeUser.UserId + "/" + item.ProductId, stringContent);
    }

    private void PlaceOrder()
    {
        //Navigera till checkout sida?
    }

    private async Task DecreaseQuantity(CartItemDto item)
    {
        await HttpClient.PostAsync(HttpClient.BaseAddress + "api/user/shoppingcart/decrease/" + SharedClass.activeUser.UserId + "/" + item.ProductId, stringContent);
    }

    private async Task IncreaseQuantity(CartItemDto item)
    {
        await HttpClient.PostAsync(HttpClient.BaseAddress + "api/user/shoppingcart/increase/" + SharedClass.activeUser.UserId + "/" + item.ProductId, stringContent);
    }

}

<style>
    ﻿.item-container {
        display: flex;
        padding: 6px
    }

    .item-image-wrapper {
        width: 150px;
        text-align: center;
    }

    .item-image {
        max-height: 150px;
        max-width: 150px;
        padding: 6px;
    }

    .item-name {
        flex-grow: 1;
        padding: 6px;
    }

    .item-price {
        font-weight: 600;
        text-align: right;
    }

    .btn-delete {
        background: none;
        border: none;
        padding: 0px;
        color: red;
        font-size: 12px;
    }

        .btn-delete:hover {
            text-decoration: underline;
        }
</style>
