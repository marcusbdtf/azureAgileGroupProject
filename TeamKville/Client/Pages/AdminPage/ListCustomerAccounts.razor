@page "/listcustomeraccounts"
@using Microsoft.AspNetCore.Components.Web.Virtualization

<h1 class="text-center p-2 pt-4">List of Customer Accounts</h1>

<div class="container p-2 pt-4">
	<div class="accordion" id="UsersAccordion">
		
		@if (AllUsers != null)
		{
			@foreach (var itemUser in AllUsers)
			{
				<div class="accordion-item">
					<h2 class="accordion-header" id="heading_@itemUser.Email">
						<button class="accordion-button collapsed" type="button" 
						        data-bs-toggle="collapse" data-bs-target="#collapse_@itemUser.Email"
								aria-expanded="True" aria-controls="collapse_@itemUser.Email"
								@onclick="() => LoadOrders(itemUser)">
								@itemUser.Email
						</button>
					</h2>
					<div id="collapse_@itemUser.Email" 
					     class="accordion-collapse collapse" 
					     aria-labelledby="#heading_@itemUser.Email" 
					     data-bs-parent="#UsersAccordion">
						<div class="accordion-body">
							<div class="container row mt-2">
								<div class="col-md-6">
									<h4>Customer info</h4>
									<ul>
										<li>
											UserId: @itemUser.UserId
										</li>
										<li>
											Email: @itemUser.Email
										</li>
										<li>
											Name: @itemUser.FirstName @itemUser.LastName
										</li>
										<li>
											Phone: @itemUser.PhoneNumber
										</li>
										<li>
											Address: @itemUser.Address.Street
										</li>
										<li>
											City: @itemUser.Address.City
										</li>
										<li>
											PostalCode: @itemUser.Address.PostNumber
										</li>
									</ul>
								</div>
								<div class="col-md-6">
									

									<label>Choose an order:</label>
									<select @bind="SelectedOrderId" @onclick="SelectActiveOrder">
										@foreach (var orderDto in UserOrders)
										{
											<option value="@orderDto.OrderId">Order Id: @orderDto.OrderId</option>
										}
									</select>
									
									@if (ActiveOrderDto != null)
									{
										@ActiveOrderDto.OrderDate
										@ActiveOrderDto.OrderId
										@ActiveOrderDto.Street
										@ActiveOrderDto.City
										@ActiveOrderDto.PostalCode
										<div>Products
										<Virtualize Items="ActiveOrderDto.OrderedProductsDto" Context="productQuantity">
											<li class="list-group">
												<div>
													Name: @productQuantity.ProductDto.Name Quantity: @productQuantity.Quantity
												</div>
											</li>
										</Virtualize>
									</div>
									}
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		}
	</div>
</div>

@code {
	public List<UserDto> AllUsers = new ();
	public List<OrderDto> UserOrders = new();
	public OrderDto? ActiveOrderDto;
	public int SelectedOrderId;

	protected override async Task OnInitializedAsync()
	{
		var result = await HttpClient.GetFromJsonAsync<UserDto[]>(HttpClient.BaseAddress + "api/user");

		AllUsers.AddRange(result);

		await base.OnInitializedAsync();
	}


	private async Task LoadOrders(UserDto usertoFind)
	{
		var result = await HttpClient.GetFromJsonAsync<OrderDto[]>(HttpClient.BaseAddress + $"api/order?userId={usertoFind.UserId}");

		UserOrders.AddRange(result);
	}

	private void SelectActiveOrder()
	{
		Console.WriteLine($"Markerat orderid: {SelectedOrderId}");
		ActiveOrderDto = UserOrders.FirstOrDefault(o => o.OrderId.Equals(SelectedOrderId));
	}

}