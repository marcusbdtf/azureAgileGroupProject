@using Microsoft.AspNetCore.Components.Forms;
@using TeamKville.Shared
@using Microsoft.AspNetCore.Components
@using Azure.Storage.Blobs

<div class="container align-content-center">
	<h3 class="mb-4">Skapa ett event/lan</h3>

	<EditForm Model="newEvent" OnSubmit="CreateEvent" class="width-fix">

		<div class="mb-3">
			<label for="name" class="form-label">Namn på event/lan</label>
			<InputText class="form-control" id="name" @bind-Value="newEvent.Name" />
		</div>
		

		<div class="mb-3">
			<label for="description" class="form-label">Beskrivning</label>
			<InputTextArea type="text" class="form-control" id="description" @bind-Value="newEvent.Description" />

		</div>

		<div class="mb-3">
			<label for="image" class="form-label">Bild</label>
			<InputFile  type="file" class="form-control" id="image" OnChange="@LoadFile" />
		</div>

		<div class="mb-3">
			<label for="date" class="form-label">Datum</label>
			<InputDate class="form-control" id="date" @bind-Value="newEvent.Date" />
		</div>
		<button class="btn btn-secondary">Skapa</button>

	</EditForm>
	
	@if (success)
	{
		<div class="mt-3 alert alert-success d-flex align-items-center" role="alert">
			<i class="fa-solid fa-circle-check m-2"></i>
			<div>
				Lyckades lägga till ett event!
			</div>
		</div>

	}
	else if (fail)
	{
		<div class="mt-3 alert alert-danger d-flex align-items-center" role="alert">
			<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
				<path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
			</svg>
			<div>
				Något gick fel...
			</div>
		</div>
	}

</div>


@code {

	private EventDto newEvent = new EventDto();
	Stream? image;
	private bool success = false;
	private bool fail = false;



	private async void CreateEvent()
	{


		var result = await HttpClient.PostAsJsonAsync<EventDto>(HttpClient.BaseAddress + "event/create", newEvent);

		if(result.StatusCode == System.Net.HttpStatusCode.OK)
		{

			BlobContainerClient blobContainerClient = new BlobContainerClient(SharedClass.connectionStringBlob, "event");
			await blobContainerClient.UploadBlobAsync($"{newEvent.Name}.png", image);
			newEvent = new EventDto();
			success = true;
		}
		fail = true;

	}

	private async Task LoadFile(InputFileChangeEventArgs e)
	{
		image = e.File.OpenReadStream(16777215);
	}

}

<style>
	.width-fix > div {
		width: 500px;
	}

</style>
